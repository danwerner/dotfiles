#!/usr/bin/env python

"""renyme
"""

import sys, os
#env = os.environ

import optparse

def parse_cmdline():
    parser = optparse.OptionParser(
        usage = 'renyme [-v] [-n] [-f] regexp [filename] ...',
        version = '%prog ' + __version__)

    parser.add_option('-v', '--verbose', type='bool', dest='verbose',
        default=False, 'Print names of files successfully renamed.')
    parser.add_option('-n', '--no-act', type='bool', dest='noact',
        default=False, 'Only show what files would have been renamed.')
    parser.add_option('-f', '--force', type='bool', dest='force',
        default=False, 'Overwrite existing files.')

    options, args = parser.parse_args()

    # Always be verbose if we are just simulating.
    if options.noact:
        options.verbose = True

    return options, args

def main():
    options, args = parse_cmdline()
    verbose, noact, force = options.verbose, options.noact, options.force

    # XXX: Dirty -- use OptParse functionality instead.
    regex, sourcenames = args[0], args[1:]

    if len(sourcenames) == 0:
        sourcenames = sys.stdin

        if verbose:
            sys.stderr.write('No filenames given; reading from standard input instead.')

    for oldname in sourcenames:
        re.sub(regex, )

    raise NotImplementedError('Script not yet functional')

if __name__ == '__main__':
    main()
